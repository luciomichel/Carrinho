{"ast":null,"code":"import _objectSpread from \"C:\\\\Teste 3\\\\reactjs-shopping-cart-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { getProduct } from '../ducks/products';\nimport { func } from 'prop-types'; // actions\n\nconst CART_ADD = 'cart/ADD';\nconst CART_REMOVE = 'cart/REMOVE'; // reducer\n\nconst initialState = {\n  items: [],\n  // array of product ids\n  currency: 'R$'\n};\nexport default function cart(state = initialState, action = {}) {\n  switch (action.type) {\n    case CART_ADD:\n      return handleCartAdd(state, action.payload);\n\n    case CART_REMOVE:\n      return handleCartRemove(state, action.payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction handleCartAdd(state, payload) {\n  return _objectSpread({}, state, {\n    items: [...state.items, payload.productId]\n  });\n}\n\nfunction handleCartRemove(state, payload) {\n  return _objectSpread({}, state, {\n    //items: state.items.filter(id => id !== payload.productId)\n    items: alterList(state, payload.productId)\n  });\n}\n\nexport function alterList(state, code) {\n  items = [];\n  var items = state.items.filter(function (item) {\n    return item == code;\n  });\n  var noitems = state.items.filter(function (item) {\n    return item !== code;\n  });\n  state.items.indexOf(code);\n  items.splice(0, 1);\n  noitems.forEach(function (item) {\n    items.push(item);\n  });\n  return items;\n} // action creators\n\nexport function addToCart(productId) {\n  return {\n    type: CART_ADD,\n    payload: {\n      productId\n    }\n  };\n}\nexport function removeFromCart(productId) {\n  return {\n    type: CART_REMOVE,\n    payload: {\n      productId\n    }\n  };\n} // selectors\n\nexport function isInCart(state, props) {\n  return state.cart.items.indexOf(props.id) !== -1;\n}\nexport function getItems(state, props) {\n  let uniqueItems;\n  var items = state.cart.items.map(id => getProduct(state, {\n    id\n  }));\n  uniqueItems = [...new Set(items)];\n  uniqueItems.forEach(function (item) {\n    let quantidade = 0;\n    items.forEach(function (i) {\n      if (item.id = i.id) {\n        quantidade++;\n      }\n    });\n    item.price = item.price;\n    item.qtd = quantidade;\n    item.total = item.price * quantidade;\n  });\n  return uniqueItems;\n}\nexport function getCurrency(state, props) {\n  return state.cart.currency;\n}\nexport function getTotal(state, props) {\n  return state.cart.items.reduce((acc, id) => {\n    const item = getProduct(state, {\n      id\n    });\n    return acc + item.price;\n  }, 0);\n}","map":{"version":3,"sources":["C:\\Teste 3\\reactjs-shopping-cart-master\\src\\ducks\\cart.js"],"names":["getProduct","func","CART_ADD","CART_REMOVE","initialState","items","currency","cart","state","action","type","handleCartAdd","payload","handleCartRemove","productId","alterList","code","filter","item","noitems","indexOf","splice","forEach","push","addToCart","removeFromCart","isInCart","props","id","getItems","uniqueItems","map","Set","quantidade","i","price","qtd","total","getCurrency","getTotal","reduce","acc"],"mappings":"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","sourcesContent":["import { getProduct } from '../ducks/products';\nimport { func } from 'prop-types';\n\n// actions\nconst CART_ADD   = 'cart/ADD';\nconst CART_REMOVE = 'cart/REMOVE';\n\n// reducer\nconst initialState = {\n    items: [], // array of product ids\n    currency: 'R$'\n};\n\nexport default function cart(state = initialState, action = {}) {\n    switch (action.type) {\n        case CART_ADD:\n            return handleCartAdd(state, action.payload);\n        case CART_REMOVE:\n            return handleCartRemove(state, action.payload);\n        default:\n            return state;\n    }\n}\n\nfunction handleCartAdd(state, payload) {\n    return {\n        ...state,\n        items: [ ...state.items, payload.productId ]\n    };\n}\n\nfunction handleCartRemove(state, payload) {\n    return {\n        ...state,\n        //items: state.items.filter(id => id !== payload.productId)\n        items: alterList(state, payload.productId)\n    };\n}\n\nexport function alterList(state, code){\n\n    items = [];\n    var items = state.items.filter(function(item) { \n        return item == code; \n    }); \n\n    var noitems = state.items.filter(function(item) { \n        return item !== code; \n    }); \n    \n    state.items.indexOf(code);\n    items.splice(0,1);\n\n    noitems.forEach(function(item){\n        items.push(item)\n    });\n\n    return items;\n}\n\n// action creators\nexport function addToCart(productId) {\n    return {\n        type: CART_ADD,\n        payload: {\n            productId\n        }\n    }\n}\n\nexport function removeFromCart(productId) {\n    return {\n        type: CART_REMOVE,\n        payload: {\n            productId\n        }\n    }\n}\n\n// selectors\nexport function isInCart(state, props) {\n\n    return state.cart.items.indexOf(props.id) !== -1;\n}\n\nexport function getItems(state, props) {\n    let uniqueItems;\n    var items = state.cart.items.map(id => getProduct(state, { id })); \n\n    uniqueItems = [...new Set(items)]; \n\n    uniqueItems.forEach(function(item){\n        let quantidade = 0;\n        items.forEach(function(i){\n            if(item.id = i.id){\n                quantidade ++;\n            }\n        });\n        item.price = item.price;\n        item.qtd = quantidade;\n        item.total = (item.price * quantidade)\n    })\n\n    return uniqueItems;\n}\n\nexport function getCurrency(state, props) {\n    return state.cart.currency;\n}\n\nexport function getTotal(state, props) {\n    return state.cart.items.reduce((acc, id) => {\n        const item = getProduct(state, { id });\n        return acc + item.price;\n    }, 0);\n}\n"]},"metadata":{},"sourceType":"module"}