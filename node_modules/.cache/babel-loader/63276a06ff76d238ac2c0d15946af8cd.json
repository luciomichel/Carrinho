{"ast":null,"code":"import _objectSpread from \"C:\\\\Teste 3\\\\reactjs-shopping-cart-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { getProduct } from '../ducks/products';\nimport { func } from 'prop-types'; // actions\n\nconst CART_ADD = 'cart/ADD';\nconst CART_REMOVE = 'cart/REMOVE'; // reducer\n\nconst initialState = {\n  items: [],\n  // array of product ids\n  currency: 'R$'\n};\nexport default function cart(state = initialState, action = {}) {\n  switch (action.type) {\n    case CART_ADD:\n      return handleCartAdd(state, action.payload);\n\n    case CART_REMOVE:\n      return handleCartRemove(state, action.payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction handleCartAdd(state, payload) {\n  return _objectSpread({}, state, {\n    items: [...state.items, payload.productId]\n  });\n}\n\nfunction handleCartRemove(state, payload) {\n  return _objectSpread({}, state, {\n    //items: state.items.filter(id => id !== payload.productId)\n    items: alterList(state, payload.productId)\n  });\n}\n\nexport function alterList(state, code) {\n  //items = [];\n  //var items = state.items.filter(function(item) { \n  //    return item == code; \n  //}); \n  console.log(); //items.splice(0,1);\n  //console.log('Splice ' + items);\n\n  return state.items.splice(0, 1);\n} // action creators\n\nexport function addToCart(productId) {\n  return {\n    type: CART_ADD,\n    payload: {\n      productId\n    }\n  };\n}\nexport function removeFromCart(productId) {\n  return {\n    type: CART_REMOVE,\n    payload: {\n      productId\n    }\n  };\n} // selectors\n\nexport function isInCart(state, props) {\n  return state.cart.items.indexOf(props.id) !== -1;\n}\nexport function getItems(state, props) {\n  let uniqueItems;\n  var items = state.cart.items.map(id => getProduct(state, {\n    id\n  }));\n  let code = state.cart.items[items.length - 1];\n  var quantidade = state.cart.items.filter(function (item) {\n    return item == code;\n  }).length;\n  uniqueItems = [...new Set(items)];\n  uniqueItems.forEach(function (item) {\n    if (item.id == code) {\n      item.qtd = quantidade;\n      item.total = item.price * quantidade;\n    }\n  });\n  return uniqueItems;\n}\nexport function getCurrency(state, props) {\n  return state.cart.currency;\n}\nexport function getTotal(state, props) {\n  return state.cart.items.reduce((acc, id) => {\n    const item = getProduct(state, {\n      id\n    });\n    return acc + item.price;\n  }, 0);\n}","map":{"version":3,"sources":["C:\\Teste 3\\reactjs-shopping-cart-master\\src\\ducks\\cart.js"],"names":["getProduct","func","CART_ADD","CART_REMOVE","initialState","items","currency","cart","state","action","type","handleCartAdd","payload","handleCartRemove","productId","alterList","code","console","log","splice","addToCart","removeFromCart","isInCart","props","indexOf","id","getItems","uniqueItems","map","length","quantidade","filter","item","Set","forEach","qtd","total","price","getCurrency","getTotal","reduce","acc"],"mappings":"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","sourcesContent":["import { getProduct } from '../ducks/products';\nimport { func } from 'prop-types';\n\n// actions\nconst CART_ADD   = 'cart/ADD';\nconst CART_REMOVE = 'cart/REMOVE';\n\n// reducer\nconst initialState = {\n    items: [], // array of product ids\n    currency: 'R$'\n};\n\nexport default function cart(state = initialState, action = {}) {\n    switch (action.type) {\n        case CART_ADD:\n            return handleCartAdd(state, action.payload);\n        case CART_REMOVE:\n            return handleCartRemove(state, action.payload);\n        default:\n            return state;\n    }\n}\n\nfunction handleCartAdd(state, payload) {\n    return {\n        ...state,\n        items: [ ...state.items, payload.productId ]\n    };\n}\n\nfunction handleCartRemove(state, payload) {\n    return {\n        ...state,\n        //items: state.items.filter(id => id !== payload.productId)\n        items: alterList(state, payload.productId)\n    };\n}\n\nexport function alterList(state, code){\n\n    //items = [];\n    //var items = state.items.filter(function(item) { \n    //    return item == code; \n    //}); \n\n    console.log();\n    //items.splice(0,1);\n\n    //console.log('Splice ' + items);\n\n    return state.items.splice(0,1);\n}\n\n// action creators\nexport function addToCart(productId) {\n    return {\n        type: CART_ADD,\n        payload: {\n            productId\n        }\n    }\n}\n\nexport function removeFromCart(productId) {\n    return {\n        type: CART_REMOVE,\n        payload: {\n            productId\n        }\n    }\n}\n\n// selectors\nexport function isInCart(state, props) {\n    \n    return state.cart.items.indexOf(props.id) !== -1;\n}\n\nexport function getItems(state, props) {\n    let uniqueItems;\n    var items = state.cart.items.map(id => getProduct(state, { id })); \n        \n    let code = state.cart.items[(items.length - 1)];\n\n    var quantidade = state.cart.items.filter(function(item) { \n        return item == code; \n    }).length; \n\n    uniqueItems = [...new Set(items)]; \n\n    uniqueItems.forEach(function(item){\n        if(item.id == code){\n            item.qtd = quantidade;\n            item.total = (item.price * quantidade)\n        }\n    })\n\n    return uniqueItems;\n}\n\nexport function getCurrency(state, props) {\n    return state.cart.currency;\n}\n\nexport function getTotal(state, props) {\n    return state.cart.items.reduce((acc, id) => {\n        const item = getProduct(state, { id });\n        return acc + item.price;\n    }, 0);\n}\n"]},"metadata":{},"sourceType":"module"}